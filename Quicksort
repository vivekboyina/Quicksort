#include<stdio.h>
void swap(int* a,int* b)
{ 
   // swapping of elements
   int temp = *a;
   *a = *b;
   *b = temp;
}
int partition(int arr[],int low,int high)
{  
   // assigning pivot to array's low index
   int pivot = arr[low];
   int start = low;
   int end = high;
   while(start < end)
   {
     //checking arr[start] <= pivot and if it is true then increment start
      while(arr[start] <= pivot) start++;
     //checking arr[end] > pivot and if it is true then decrement end
      while(arr[end] > pivot) end--;
     //if start is less than end then swap elements
      if(start < end) swap(&arr[start],&arr[end]);
  }
  //swap low and end array elements
  swap(&arr[low],&arr[end]);
  //return the pivot's index
  return end;
}
void quicksort(int arr[],int low,int high)
{
  if(low < high)
  {
     //every time pivot should be updated by the partition function
     int pivot = partition(arr,low,high);
     //sort left numbers of pivot
     quicksort(arr,low,pivot-1);
     //sort right numbers of pivot
     quicksort(arr,pivot+1,high);
  }
}
int main()
{
   int n;
   scanf("%d", &n);
   int arr[n];
   //scan the elements of array
   for(int i = 0; i < n; i++) scanf("%d", &arr[i]);
   quicksort(arr,0,n-1);
   //print the sorted array
   for(int i = 0; i < n; i++) printf("%d ", arr[i]);
   return 0;
}
